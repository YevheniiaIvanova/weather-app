{"version":3,"sources":["components/SearchBar/search-bar.module.scss","components/Footer/footer.module.scss","components/Header/header.module.scss","setupIcons.ts","pages/Error404/index.tsx","components/Footer/index.tsx","components/Header/index.tsx","components/SearchBar/index.tsx","constants/api-key.js","services/weather-api.ts","utils/getCurrentDate.ts","components/WeatherIcon/index.tsx","components/WeatherCard/index.tsx","pages/WeatherPage/index.tsx","index.tsx","components/WeatherCard/weather-card.module.scss"],"names":["module","exports","setupIcons","library","add","faGithub","Error404","Footer","className","styles","footer","link","href","target","rel","icon","Date","getFullYear","Header","header","SearchBar","setLocation","useState","searchValue","setSearchValue","type","name","id","input","onChange","event","currentTarget","value","onKeyPress","key","button","onClick","API_KEY","baseUrl","a","location","Axios","get","this","result","validateRequest","data","feelsLike","main","temp","temp_min","temp_max","description","weather","wind","country","sys","status","Error","getCurrentDate","date","month","toLocaleString","getDate","WeatherIcon","src","alt","WeatherCard","cityName","weatherData","setWeatherData","useEffect","WeatherApi","getWeather","then","currentDate","useCallback","temperature","WeatherPage","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.f842b9db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-bar\":\"search-bar_search-bar__1Ong8\",\"input\":\"search-bar_input__2tC90\",\"button\":\"search-bar_button__1Ce95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1wu6O\",\"link\":\"footer_link__1ikA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2SsYH\",\"link\":\"header_link__1r-zI\",\"title\":\"header_title__3AfdZ\"};","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst setupIcons = () => {\n  library.add(faGithub);\n};\n\nexport default setupIcons;\n","const Error404: React.FC = () => {\n  return <div>Error</div>;\n};\n\nexport default Error404;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './footer.module.scss';\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <span>\n      Powered by\n      <a\n        className={styles.link}\n        href=\"/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      &copy;\n      <span>{new Date().getFullYear()}</span>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './header.module.scss';\n\nconst Header = () => (\n  <header className={styles.header}>\n    <h1 className=\"title\">Weather App</h1>\n    <a\n      className={styles.link}\n      href=\"/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <FontAwesomeIcon icon={['fab', 'github']} />\n    </a>\n  </header>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\n\nimport styles from './search-bar.module.scss';\n\ntype SearchBarProps = {\n  setLocation: (location: string) => void;\n};\n\nconst SearchBar: React.FC<SearchBarProps> = ({ setLocation }) => {\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.currentTarget.value);\n  };\n\n  const onSearchClickHandler = () => {\n    if (searchValue) {\n      setLocation(searchValue);\n    }\n  };\n\n  const onKeypressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      setLocation(searchValue);\n    }\n  };\n\n  return (\n    <div className={styles['search-bar']}>\n      <input\n        type=\"search\"\n        name=\"\"\n        id=\"\"\n        className={styles.input}\n        onChange={onChangeHandler}\n        onKeyPress={onKeypressHandler}\n        value={searchValue}\n      />\n      <button\n        type=\"button\"\n        className={styles.button}\n        onClick={onSearchClickHandler}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","const API_KEY = 'a2eff27db9b787996de2f1e9bfa31a3f';\nexport default API_KEY;\n","import Axios from 'axios';\n\nimport API_KEY from '../constants/api-key';\nimport { Weather } from '../types';\n\nclass WeatherApi {\n  private readonly baseUrl = 'http://api.openweathermap.org/data/2.5/weather';\n\n  async getWeather(location = 'Dnipro'): Promise<Weather> {\n    const result = await Axios.get(\n      `${this.baseUrl}?q=${location}&APPID=${API_KEY}&units=metric`\n    );\n    this.validateRequest(result);\n\n    return {\n      location: result.data['name'],\n      feelsLike: result.data.main['feels_like'],\n      temp: result.data.main['temp'],\n      temp_min: result.data.main['temp_min'],\n      temp_max: result.data.main['temp_max'],\n      description: result.data.weather[0]['description'],\n      icon: result.data.weather[0]['icon'],\n      wind: result.data.wind['speed'],\n      country: result.data.sys['country'],\n    };\n  }\n\n  validateRequest(result: { status: number }) {\n    if (result.status < 200 && result.status > 299) {\n      throw new Error(`Could not get data, status ${result.status}`);\n    }\n  }\n\n  // async getIconWeather(icon: string) {\n  //   const iconUrl = `http://openweathermap.org/img/wn/04d@2x.png`;\n  //   return await Axios.get(iconUrl);\n  // }\n}\n\nexport default new WeatherApi();\n","const getCurrentDate = (): string => {\n  const date = new Date();\n  const month = date.toLocaleString('en', { month: 'long' });\n  return `${date.getDate()} ${month}`;\n};\n\nexport default getCurrentDate;\n","type ImageProps = {\n  icon: string;\n};\n\nconst WeatherIcon: React.FC<ImageProps> = ({ icon }) => {\n  return (\n    <div className={'icon'}>\n      <img\n        data-testid=\"weather-image\"\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n        alt=\"weather icon\"\n      />\n    </div>\n  );\n};\n\nexport default WeatherIcon;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport WeatherApi from '../../services/weather-api';\nimport { Weather } from '../../types';\nimport getCurrentDate from '../../utils/getCurrentDate';\nimport WeatherIcon from '../WeatherIcon';\nimport styles from './weather-card.module.scss';\n\ntype WeatherCardProps = {\n  cityName: string;\n};\n\nconst WeatherCard: React.FC<WeatherCardProps> = ({ cityName }) => {\n  const [weatherData, setWeatherData] = useState<Weather | null>(null);\n\n  useEffect(() => {\n    WeatherApi.getWeather('Dnipro').then((data) => {\n      setWeatherData(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (cityName) {\n      WeatherApi.getWeather(cityName).then((data) => {\n        setWeatherData(data);\n      });\n    }\n  }, [cityName]);\n\n  const currentDate = useCallback(() => {\n    return getCurrentDate();\n  }, []);\n\n  if (weatherData === null) {\n    return null;\n  }\n\n  const {\n    location,\n    description,\n    wind,\n    feelsLike,\n    temp,\n    temp_max,\n    temp_min,\n    country,\n    icon,\n  } = weatherData;\n\n  return (\n    <div className={styles['weather-card']}>\n      <h2 className={styles.location}>\n        {location} {country}\n      </h2>\n      <h3 className={styles.date}>{currentDate}</h3>\n      <div className={styles.temperature}>{temp} &#8451;</div>\n      <WeatherIcon icon={icon} />\n      <div className={'description'}>{description}</div>\n      <div className=\"\">\n        Max: {temp_max} &#8451; / Min: {temp_min} &#8451;\n      </div>\n      <div>Feels like {feelsLike} &#8451;</div>\n      <div className=\"\">Wind: {wind} m/s</div>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n","import { useState } from 'react';\n\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport WeatherCard from '../../components/WeatherCard';\n\nconst WeatherPage: React.FC = () => {\n  const [location, setLocation] = useState<string>('');\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <div className=\"container\">\n        <SearchBar setLocation={setLocation} />\n        <WeatherCard cityName={location} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default WeatherPage;\n","import 'index.scss';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport setupIcons from 'setupIcons';\n\nimport Error404 from './pages/Error404';\nimport WeatherPage from './pages/WeatherPage';\n\nsetupIcons();\n\nrender(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/weather\">\n          <WeatherPage />\n        </Route>\n        <Route exact path=\"/\">\n          <WeatherPage />\n        </Route>\n        <Route path=\"*\">\n          <Error404 />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather-card\":\"weather-card_weather-card__jC5Cg\",\"location\":\"weather-card_location__3SvXS\",\"date\":\"weather-card_date__3oCmg\"};"],"sourceRoot":""}